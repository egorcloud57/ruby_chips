require 'ripper'
require 'pp'

code = "10.times do |n| puts n end"
p Ripper.tokenize(code)

pp Ripper.lex(code) # разбиение на лексемы. Токенизатор совершенно глуп, даже если вы дадите неверный код рубина, он все равно его токенизирует. Далее в основе синтаксического анализатора в руби выступает файл - parse.y где описаны все правила грамматики. Далее поток лексем преобразуется в абстрактное синтаксическое дерево. и у же потом в байт код.

pp Ripper.sexp(code) # Если будет ошибка в синтаксисе то анализатор выдаст nil а в рантайме ошибку.

# ! В отличие от java мы не используем компилятор напрямую. Ruby не предоставляет такой инструмент. YARV - аналог JVM в Java. yjit компилятор появился в ruby 3.2 YARV преобразует ruby код в инструкции понятные интерпритатору C-ruby.

puts RubyVM::InstructionSequence.compile("10.times do |n| puts n end").disasm # Инструкции синтаксического дерева для C-ruby.